name: Build

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"


env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
        fetch-depth: 0
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2.4.2
    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: 'aarch64-linux-android,armv7-linux-androideabi,x86_64-linux-android,i686-linux-android'
    # See https://github.com/Bromeon/godot-rust/blob/master/.github/workflows/full-ci.yml
    - name: "Find highest Android NDK version"
      run: |
        echo $ANDROID_SDK_ROOT
        HIGHEST_NDK_VERSION=$(ls $ANDROID_SDK_ROOT/ndk | tail -n1)
        echo "Highest Android NDK: $HIGHEST_NDK_VERSION"
        EXPECTED_NDK_VERSION=26.1.10909125
        echo "Expected Android NDK: $EXPECTED_NDK_VERSION"
        [[ "$EXPECTED_NDK_VERSION" == "$HIGHEST_NDK_VERSION" ]];
        echo "ANDROID_NDK_VERSION=$EXPECTED_NDK_VERSION" >> $GITHUB_ENV
    - name: Build ruslin-data-uniffi
      working-directory: ./ruslin-data-uniffi
#      ./release.sh arm64-v8a
#      ./release.sh armeabi-v7a
#      ./release.sh x86_64
#      ./release.sh x86
      run: |
        ./build.sh
    - name: Print dir
      working-directory: ./uniffi/src/main/java/uniffi/ruslin
      run: |
        ls -R
